// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // ou "mysql", "sqlite", etc.
  url      = env("DATABASE_URL")
}

enum CategoryStatus {
  ACTIVE
  INACTIVE
}

model Gift {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Decimal
  imageUrl    String?
  status      String   @default("available") // available, reserved
  reservedBy  String?  // Nome de quem reservou
  createdAt   DateTime @default(now())    
}

model Product {
  id          String       @id @default(uuid())
  nameProduct String       @unique
  categoryName String? @map("category_name") // Nome da categoria, opcional
  quantity   Int          @default(0)
  costPrice  Decimal      @default(0.0)
  salerPrice  Decimal      @default(0.0)
  supplierName String? @map("supplier_name") // Nome do fornecedor, opcional
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?

  inventory  Inventory?

  @@index([nameProduct])
}

model Category {
    id String @id @default(uuid())
    name String
    description String?
    status CategoryStatus
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name], map: "idx_category_name")
    @@index([status], map: "idx_category_status")
}

model Supplier {
  id        String    @id @default(cuid())
  name      String    @unique
  email     String?   @unique
  phone     String?
  address   String?
  createdAt DateTime  @default(now())
}

model Inventory {
  id        String    @id @default(cuid())
  productId String    @unique
  quantity  Int       @default(0)
  minStock  Int       @default(10)
  product   Product   @relation(fields: [productId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([quantity])
}

enum ProductStatus {
  ACTIVE
  INACTIVE
  DISCONTINUED
}

