# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  accessToken: String!
  company: CompanyDto!
  expiresIn: String!
  module: ModuleDto
  plan: PlanDto
  user: UserDto!
}

enum CashMovementCategory {
  CHANGE
  EXPENSE
  OTHER_IN
  PAYMENT
  SALE
  WITHDRAWAL
}

type CashMovementGraphQL {
  category: CashMovementCategory!
  date: DateTime
  description: String!
  id: String!
  message: String
  type: CashMovementType!
  typePayment: MovementTypePayment!
  user_id: String!
  value: Float!
}

enum CashMovementType {
  ENTRY
  EXIT
}

input ChangePasswordInput {
  confirmPassword: String!
  currentPassword: String!
  newPassword: String!
}

type CompanyDto {
  address: String
  email: String
  id: String!
  logoUrl: String
  name: String
  phone: String
}

input CreateCashMovementInput {
  category: String!
  date: DateTime
  description: String!
  type: String!
  typePayment: String!
  value: Float!
}

type DashboardStats {
  monthlyTotal: Float!
  todayBalance: Float!
  todayEntries: Float!
  todayExits: Float!
}

input DashboardStatsInput {
  date: String
  userId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FindAllCashMovementInput {
  date: DateTime
  description: String!
  type: String
  typePayment: String!
  value: Float!
}

input LoginUserInput {
  email: String!
  password_hash: String!
}

type ModuleDto {
  description: String
  isActive: Boolean
  module_key: String!
  name: String!
  permission: [String!]!
}

enum MovementTypePayment {
  CASH
  CREDIT_CARD
  DEBIT_CARD
  OTHER
  PIX
}

type Mutation {
  cashMovementDelete(movementId: String!): Boolean!
  cashMovementUpdate(movementId: String!, movementUpdateCash: UpdateCashMovementInput!): Boolean!
  changePassword(input: ChangePasswordInput!): String!
  createCashMovement(input: CreateCashMovementInput!): CashMovementGraphQL!
  login(loginUserInput: LoginUserInput!): AuthPayload!
}

type PermissionDto {
  """Chave do módulo (ex: estoque, vendas)"""
  module_key: String!

  """Lista de permissões (ex: READ, WRITE)"""
  permissions: [String!]!
}

type PlanDto {
  description: String
  id: String!
  modules: [ModuleDto!]!
  name: String!
}

type Query {
  cashMovements(input: FindAllCashMovementInput): [CashMovementGraphQL!]!
  company(id: String!): CompanyDto!
  dashboardStats(input: DashboardStatsInput): DashboardStats!
  me: UserResponseDto!
}

input UpdateCashMovementInput {
  category: String!
  date: DateTime
  description: String!
  type: String!
  value: Float!
}

type UserDto {
  company: CompanyDto!
  company_id: String!
  createdAt: DateTime!
  email: String!
  id: String!
  name: String!
  password_hash: String!
  permissions: [PermissionDto]!
  plan: PlanDto
  role: String!
}

type UserResponseDto {
  company_id: String
  email: String!
  id: String!
  is_active: Boolean!
  name: String!
  permissions: [PermissionDto]!
  plan: PlanDto
  role: String!
}