# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  accessToken: String!
  company: CompanyDto!
  expiresIn: String!
  module: ModuleDto
  plan: PlanDto
  user: UserDto!
}

enum CashMovementCategory {
  CHANGE
  EXPENSE
  OTHER_IN
  PAYMENT
  SALE
  WITHDRAWAL
}

type CashMovementGraphQL {
  category: CashMovementCategory!
  date: DateTime
  description: String!
  id: String!
  message: String
  type: CashMovementType!
  user_id: String!
  value: Float!
}

enum CashMovementType {
  ENTRY
  EXIT
}

type CategoryDto {
  id: ID!
  name: String!
  status: String!
}

type CategoryType {
  active: Boolean!
  color: String!
  createdAt: String!
  description: String
  id: ID!
  name: String!
  updatedAt: String!
}

type CompanyDto {
  address: String
  email: String
  id: String!
  name: String!
  phone: String
}

input CreateCashMovementInput {
  category: String!
  date: DateTime
  description: String!
  type: String!
  value: Float!
}

input CreateCategoryInput {
  active: Boolean!
  color: String!
  description: String
  name: String!
}

input CreateProductInput {
  categoryId: String!
  costPrice: Float!
  description: String
  nameProduct: String!
  quantity: Int!
  salePrice: Float!
  supplierId: String
}

type DashboardStats {
  monthlyTotal: Float!
  todayBalance: Float!
  todayEntries: Float!
  todayExits: Float!
}

input DashboardStatsInput {
  date: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FindAllCashMovementInput {
  date: DateTime
  description: String!
  type: String
  value: Float!
}

input LoginUserInput {
  email: String!
  password_hash: String!
}

type ModuleDto {
  description: String
  isActive: Boolean!
  module_key: String!
  name: String!
  permission: [String!]!
}

type Mutation {
  createCashMovement(input: CreateCashMovementInput!): CashMovementGraphQL!
  createCategory(input: CreateCategoryInput!): CategoryType!
  createProduct(dto: CreateProductInput!): ProductResponseDto!
  login(loginUserInput: LoginUserInput!): AuthPayload!
}

type PlanDto {
  description: String
  id: String!
  modules: [ModuleDto!]!
  name: String!
}

type ProductResponseDto {
  categoryId: String!
  costPrice: Float!
  createdAt: DateTime!
  createdById: String!
  description: String
  id: String!
  nameProduct: String!
  quantity: Int!
  salePrice: Float!
  supplierId: String
  updatedAt: DateTime!
}

type Query {
  cashMovements(input: FindAllCashMovementInput): [CashMovementGraphQL!]!
  categories: [CategoryType!]!
  categoriesActive: [CategoryDto!]!
  company(id: String!): CompanyDto!
  dashboardStats(input: DashboardStatsInput): DashboardStats!
  me: UserResponseDto!
  products: [ProductResponseDto!]!
  suppliers: [SupplierOutput!]!
}

type SupplierOutput {
  id: ID!
  name: String!
}

type UserDto {
  company: CompanyDto!
  company_id: String!
  createdAt: DateTime!
  email: String!
  id: String!
  name: String
  plan: PlanDto
  role: String!
}

type UserResponseDto {
  company_id: String
  email: String!
  id: String!
  is_active: Boolean!
  name: String!
  role: String!
}